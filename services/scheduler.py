import asyncio

from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from datetime import datetime
from zoneinfo import ZoneInfo
import random
from sqlalchemy import select

from database.database import get_engine, get_sessionmaker, get_session
from models.users import User
from models.materials import Material
from settings.config import settings

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫
KR_TIMEZONE = ZoneInfo("Asia/Krasnoyarsk")

# –°–ø–∏—Å–∫–∏ —É—Ç—Ä–µ–Ω–Ω–∏—Ö –º–æ—Ç–∏–≤–∞—Ü–∏–π/—Ñ–∞–∫—Ç–æ–≤
MORNING_MESSAGES = [
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üåû –°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –æ–±—É—á–µ–Ω–∏—è!",
    "–° –Ω–æ–≤—ã–º –¥–Ω—ë–º! –í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ —É—Å–ø–µ—Ö –∂–¥—É—Ç —Ç–µ–±—è!",
    "–ü—Ä–∏–≤–µ—Ç! –ù–∞—á–Ω–∏ –¥–µ–Ω—å —Å —É–ª—ã–±–∫–∏ –∏ –Ω–æ–≤—ã—Ö –∑–Ω–∞–Ω–∏–π!",
]

engine = get_engine(settings.DATABASE_URL)
session_factory = get_sessionmaker(engine)

scheduler = AsyncIOScheduler(timezone=KR_TIMEZONE)

async def send_morning_message(bot):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É.
    """
    async with get_session(session_factory) as session:
        result = await session.execute(
            select(User).where(User.status == "—Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞")  # —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ
        )
        users = result.scalars().all()

        for user in users:
            msg = random.choice(MORNING_MESSAGES)
            await bot.send_message(user.telegram_id, msg)


async def send_daily_material(bot):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —É—á–µ–±–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–Ω—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏.
    """
    async with get_session(session_factory) as session:
        users_result = await session.execute(
            select(User).where(User.status == "—Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞")
        )
        users = users_result.scalars().all()

        for user in users:
            # —Å—á–∏—Ç–∞–µ–º –¥–µ–Ω—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
            delta_days = (datetime.now(KR_TIMEZONE).date() - user.start_date.date()).days + 1

            # –æ–≥—Ä–∞–Ω–∏—á–∏–º 1‚Äì5 –¥–µ–Ω—å
            if 1 <= delta_days <= 5:
                mat_result = await session.execute(
                    select(Material).where(Material.day == delta_days)
                )
                material = mat_result.scalars().first()
                if material:
                    text = material.text or ""
                    await bot.send_message(user.telegram_id, text)



def start_scheduler(bot):
    loop = asyncio.get_running_loop()

    # –£—Ç—Ä–æ ‚Äî 8:00 –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫
    scheduler.add_job(
        lambda: loop.create_task(send_morning_message(bot)),
        CronTrigger(hour=16, minute=28)
    )

    # –î–Ω—ë–º ‚Äî 12:00 –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫
    scheduler.add_job(
        lambda: loop.create_task(send_daily_material(bot)),
        CronTrigger(hour=22, minute=29)
    )

    scheduler.start()