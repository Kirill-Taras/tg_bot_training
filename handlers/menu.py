from aiogram import F, Router
from aiogram.types import Message
from sqlalchemy import select

from database.database import SessionLocal, get_session
from keyboards.menu import admin_menu, employee_menu
from models.users import User

router: Router = Router()


async def get_user_role(telegram_id: int) -> str | None:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ telegram_id.

    Args:
        telegram_id (int): Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns:
        str | None: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ("admin", "employee" –∏–ª–∏ None, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω).
    """
    async with get_session(SessionLocal) as session:
        result = await session.execute(
            select(User).where(User.telegram_id == telegram_id)
        )
        user: User | None = result.scalar_one_or_none()
        return user.role if user else None


@router.message(F.text == "/menu")
async def show_menu(message: Message) -> None:
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    role = await get_user_role(message.from_user.id)

    if role == "admin":
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–∞–¥–º–∏–Ω):", reply_markup=admin_menu)
    elif role == ["employee"]:
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=employee_menu)
    else:
        await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.")


@router.message(F.text == "üìù –¢–µ—Å—Ç—ã")
async def tests(message: Message) -> None:
    """
    –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ —Ç–µ—Å—Ç–æ–≤.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await message.answer("üìù –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç.")


@router.message(F.text == "/myrole")
async def check_my_role(message: Message):
    async with get_session(SessionLocal) as session:
        result = await session.execute(
            select(User).where(User.telegram_id == message.from_user.id)
        )
        user: User | None = result.scalar_one_or_none()
        if user:
            await message.answer(f"üë§ –í–∞—à–∞ —Ä–æ–ª—å: {user.role}")
        else:
            await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")


@router.message(F.text == "/delete_me")
async def delete_me(message: Message):
    async with get_session(SessionLocal) as session:
        result = await session.execute(
            select(User).where(User.telegram_id == message.from_user.id)
        )
        user = result.scalar_one_or_none()
        if user:
            await session.delete(user)
            await session.commit()
            await message.answer(
                "üóëÔ∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É–¥–∞–ª—ë–Ω. –í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
            )
        else:
            await message.answer("‚ùå –í–∞—Å –∏ —Ç–∞–∫ –Ω–µ—Ç –≤ –±–∞–∑–µ.")
