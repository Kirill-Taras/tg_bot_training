from aiogram import Router, F
from aiogram.types import Message
from sqlalchemy import select

from models.users import User
from database.database import get_session
from keyboards.menu import employee_menu, admin_menu

router: Router = Router()


async def get_user_role(telegram_id: int) -> str | None:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ telegram_id.

    Args:
        telegram_id (int): Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns:
        str | None: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ("admin", "employee" –∏–ª–∏ None, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω).
    """
    async with get_session() as session:
        result = await session.execute(
            select(User).where(User.telegram_id == telegram_id)
        )
        user: User | None = result.scalar_one_or_none()
        return user.role if user else None


@router.message(F.text == "/menu")
async def show_menu(message: Message) -> None:
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    role = await get_user_role(message.from_user.id)

    if role == "admin":
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–∞–¥–º–∏–Ω):", reply_markup=admin_menu)
    elif role == "employee":
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=employee_menu)
    else:
        await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.")


@router.message(F.text == "üìö –£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
async def materials(message: Message) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    text: str = (
        "üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n\n"
        "1. –û—Å–Ω–æ–≤—ã —Å–µ—Ä–≤–∏—Å–∞ ‚Äî [—Å—Å—ã–ª–∫–∞](https://example.com/doc1)\n"
        "2. –¢–µ—Ö–Ω–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ‚Äî [—Å—Å—ã–ª–∫–∞](https://example.com/doc2)\n"
        "3. –†–∞–±–æ—Ç–∞ —Å –≥–æ—Å—Ç—è–º–∏ ‚Äî [—Å—Å—ã–ª–∫–∞](https://example.com/doc3)"
    )
    await message.answer(text, disable_web_page_preview=True)


@router.message(F.text == "üçΩÔ∏è –ú–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞")
async def menu_restaurant(message: Message) -> None:
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await message.answer("üçΩÔ∏è –¢—É—Ç –±—É–¥—É—Ç —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –±–ª—é–¥.")


@router.message(F.text == "üìù –¢–µ—Å—Ç—ã")
async def tests(message: Message) -> None:
    """
    –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ —Ç–µ—Å—Ç–æ–≤.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await message.answer("üìù –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç.")


@router.message(F.text == "‚ÑπÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts(message: Message) -> None:
    """
    –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await message.answer("‚ÑπÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤ üìû +7 900 123-45-67")
