from aiogram import Router, types, F
from database.database import get_session, get_engine, get_sessionmaker
from models.users import User  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ User —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å
from settings.config import settings

router = Router()
engine = get_engine(settings.DATABASE_URL, echo=True)
session_factory = get_sessionmaker(engine)

@router.message(F.text == "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
async def list_users(message: types.Message):
    async with get_session(session_factory) as session:
        users = await session.execute(User.__table__.select())
        users = users.fetchall()
        if not users:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç.")
            return

        text = "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
        for u in users:
            text += f"ID: {u.id} | {u.full_name} | —Ä–æ–ª—å: {u.role}\n"
        text += "\n–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å:"
        await message.answer(text)

@router.message(lambda msg: msg.text.isdigit())
async def user_action_menu(message: types.Message):
    user_id = int(message.text)
    async with get_session(session_factory) as session:
        user = await session.get(User, user_id)
        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        keyboard = types.ReplyKeyboardMarkup(
            keyboard=[
                [types.KeyboardButton(text=f"üóë –£–¥–∞–ª–∏—Ç—å {user.full_name}")],
                [types.KeyboardButton(text=f"‚úèÔ∏è –°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å {user.full_name}")],
                [types.KeyboardButton(text=f"üìÖ –ù–∞–∑–Ω–∞—á–∏—Ç—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É {user.full_name}")],
            ],
            resize_keyboard=True
        )
        await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è {user.full_name}:", reply_markup=keyboard)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
@router.message(F.text.startswith("üóë –£–¥–∞–ª–∏—Ç—å"))
async def delete_user(message: types.Message):
    user_name = message.text.replace("üóë –£–¥–∞–ª–∏—Ç—å ", "")
    async with get_session(session_factory) as session:
        user = await session.execute(User.__table__.select().where(User.full_name == user_name))
        user = user.scalar_one_or_none()
        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return
        await session.delete(user)
        await session.commit()
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} —É–¥–∞–ª—ë–Ω.")

# —Å–º–µ–Ω–∞ —Ä–æ–ª–∏ –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–º–∏ —à–∞–≥–∞–º–∏
