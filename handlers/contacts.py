from aiogram import F, Router
from aiogram.types import Message
from sqlalchemy import select

from database.database import get_engine, get_session, get_sessionmaker
from models.users import User
from settings.config import settings

router = Router()
engine = get_engine(settings.DATABASE_URL, echo=True)
session_factory = get_sessionmaker(engine)


@router.message(F.text == "‚ÑπÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts(message: Message) -> None:
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏.
    """
    async with get_session(session_factory) as session:
        result = await session.execute(select(User))
        users = result.scalars().all()

    if not users:
        await message.answer("‚ÑπÔ∏è –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    text_parts = ["‚ÑπÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n"]
    for u in users:
        tg_link = (
            f"[—Å—Å—ã–ª–∫–∞](https://t.me/{u.telegram_username})"
            if getattr(u, "telegram_username", None)
            else "‚Äî"
        )
        text_parts.append(
            f"üë§ *{u.full_name}*\n"
            f"üìå –î–æ–ª–∂–Ω–æ—Å—Ç—å: {u.position or '‚Äî'}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {u.phone or '‚Äî'}\n"
            f"üîó Telegram: {tg_link}\n"
        )

    await message.answer(
        "\n".join(text_parts), disable_web_page_preview=True, parse_mode="Markdown"
    )
