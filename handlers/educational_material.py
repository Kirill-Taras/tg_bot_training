from aiogram import F, Router, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from data_bot.materials_dict import MATERIALS  # —Å–ª–æ–≤–∞—Ä—å –≤–∏–¥–∞ {"–ù–∞–∑–≤–∞–Ω–∏–µ": "URL"}

router = Router()


def get_materials_categories_kb() -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.
    """
    buttons = [
        [InlineKeyboardButton(text=category, callback_data=f"material_cat:{category}")]
        for category in MATERIALS.keys()
    ]
    buttons.append(
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main")]
    )
    return InlineKeyboardMarkup(inline_keyboard=buttons)


@router.message(F.text == "üìö –£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
async def show_materials(message: types.Message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.
    """
    await message.answer(
        "üìò –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_materials_categories_kb()
    )


@router.callback_query(F.data.startswith("material_cat:"))
async def show_material_link(callback: types.CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    """
    category = callback.data.split("material_cat:")[1]
    url = MATERIALS.get(category)

    if not url:
        await callback.answer("–ú–∞—Ç–µ—Ä–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω üòî", show_alert=True)
        return

    await callback.message.edit_text(
        f"üìñ <b>{category}</b>\n\n"
        f"–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ üëá",
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üîó –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–∞—Ç–µ—Ä–∏–∞–ª—É", url=url)],
                [
                    InlineKeyboardButton(
                        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_materials"
                    )
                ],
            ]
        ),
    )


@router.callback_query(F.data == "back_to_materials")
async def back_to_materials(callback: types.CallbackQuery):
    """
    –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.
    """
    await callback.message.edit_text(
        "üìò –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=get_materials_categories_kb()
    )


@router.callback_query(F.data == "back_main")
async def back_main(callback: types.CallbackQuery):
    """
    –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, ReplyKeyboardMarkup —Å –∫–æ–º–∞–Ω–¥–∞–º–∏).
    """
    await callback.message.delete()
    await callback.message.answer("üì≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.")
